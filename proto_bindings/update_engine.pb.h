// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_engine.proto

#ifndef PROTOBUF_update_5fengine_2eproto__INCLUDED
#define PROTOBUF_update_5fengine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace chromeos_update_engine {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_update_5fengine_2eproto();
void protobuf_AssignDesc_update_5fengine_2eproto();
void protobuf_ShutdownFile_update_5fengine_2eproto();

class DlcInfo;
class DlcParameters;

// ===================================================================

class DlcInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:chromeos_update_engine.DlcInfo) */ {
 public:
  DlcInfo();
  virtual ~DlcInfo();

  DlcInfo(const DlcInfo& from);

  inline DlcInfo& operator=(const DlcInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const DlcInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DlcInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DlcInfo* other);

  // implements Message ----------------------------------------------

  inline DlcInfo* New() const { return New(NULL); }

  DlcInfo* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DlcInfo& from);
  void MergeFrom(const DlcInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DlcInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string dlc_id = 1;
  void clear_dlc_id();
  static const int kDlcIdFieldNumber = 1;
  const ::std::string& dlc_id() const;
  void set_dlc_id(const ::std::string& value);
  void set_dlc_id(const char* value);
  void set_dlc_id(const char* value, size_t size);
  ::std::string* mutable_dlc_id();
  ::std::string* release_dlc_id();
  void set_allocated_dlc_id(::std::string* dlc_id);

  // @@protoc_insertion_point(class_scope:chromeos_update_engine.DlcInfo)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr dlc_id_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_update_5fengine_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_update_5fengine_2eproto();
  #endif
  friend void protobuf_AssignDesc_update_5fengine_2eproto();
  friend void protobuf_ShutdownFile_update_5fengine_2eproto();

  void InitAsDefaultInstance();
  static DlcInfo* default_instance_;
};
// -------------------------------------------------------------------

class DlcParameters : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:chromeos_update_engine.DlcParameters) */ {
 public:
  DlcParameters();
  virtual ~DlcParameters();

  DlcParameters(const DlcParameters& from);

  inline DlcParameters& operator=(const DlcParameters& from) {
    CopyFrom(from);
    return *this;
  }

  static const DlcParameters& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DlcParameters* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DlcParameters* other);

  // implements Message ----------------------------------------------

  inline DlcParameters* New() const { return New(NULL); }

  DlcParameters* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DlcParameters& from);
  void MergeFrom(const DlcParameters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DlcParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .chromeos_update_engine.DlcInfo dlc_infos = 1;
  int dlc_infos_size() const;
  void clear_dlc_infos();
  static const int kDlcInfosFieldNumber = 1;
  const ::chromeos_update_engine::DlcInfo& dlc_infos(int index) const;
  ::chromeos_update_engine::DlcInfo* mutable_dlc_infos(int index);
  ::chromeos_update_engine::DlcInfo* add_dlc_infos();
  ::google::protobuf::RepeatedPtrField< ::chromeos_update_engine::DlcInfo >*
      mutable_dlc_infos();
  const ::google::protobuf::RepeatedPtrField< ::chromeos_update_engine::DlcInfo >&
      dlc_infos() const;

  // optional string omaha_url = 2;
  void clear_omaha_url();
  static const int kOmahaUrlFieldNumber = 2;
  const ::std::string& omaha_url() const;
  void set_omaha_url(const ::std::string& value);
  void set_omaha_url(const char* value);
  void set_omaha_url(const char* value, size_t size);
  ::std::string* mutable_omaha_url();
  ::std::string* release_omaha_url();
  void set_allocated_omaha_url(::std::string* omaha_url);

  // @@protoc_insertion_point(class_scope:chromeos_update_engine.DlcParameters)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::chromeos_update_engine::DlcInfo > dlc_infos_;
  ::google::protobuf::internal::ArenaStringPtr omaha_url_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_update_5fengine_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_update_5fengine_2eproto();
  #endif
  friend void protobuf_AssignDesc_update_5fengine_2eproto();
  friend void protobuf_ShutdownFile_update_5fengine_2eproto();

  void InitAsDefaultInstance();
  static DlcParameters* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DlcInfo

// optional string dlc_id = 1;
inline void DlcInfo::clear_dlc_id() {
  dlc_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DlcInfo::dlc_id() const {
  // @@protoc_insertion_point(field_get:chromeos_update_engine.DlcInfo.dlc_id)
  return dlc_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DlcInfo::set_dlc_id(const ::std::string& value) {
  
  dlc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chromeos_update_engine.DlcInfo.dlc_id)
}
inline void DlcInfo::set_dlc_id(const char* value) {
  
  dlc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chromeos_update_engine.DlcInfo.dlc_id)
}
inline void DlcInfo::set_dlc_id(const char* value, size_t size) {
  
  dlc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chromeos_update_engine.DlcInfo.dlc_id)
}
inline ::std::string* DlcInfo::mutable_dlc_id() {
  
  // @@protoc_insertion_point(field_mutable:chromeos_update_engine.DlcInfo.dlc_id)
  return dlc_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DlcInfo::release_dlc_id() {
  // @@protoc_insertion_point(field_release:chromeos_update_engine.DlcInfo.dlc_id)
  
  return dlc_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DlcInfo::set_allocated_dlc_id(::std::string* dlc_id) {
  if (dlc_id != NULL) {
    
  } else {
    
  }
  dlc_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dlc_id);
  // @@protoc_insertion_point(field_set_allocated:chromeos_update_engine.DlcInfo.dlc_id)
}

// -------------------------------------------------------------------

// DlcParameters

// repeated .chromeos_update_engine.DlcInfo dlc_infos = 1;
inline int DlcParameters::dlc_infos_size() const {
  return dlc_infos_.size();
}
inline void DlcParameters::clear_dlc_infos() {
  dlc_infos_.Clear();
}
inline const ::chromeos_update_engine::DlcInfo& DlcParameters::dlc_infos(int index) const {
  // @@protoc_insertion_point(field_get:chromeos_update_engine.DlcParameters.dlc_infos)
  return dlc_infos_.Get(index);
}
inline ::chromeos_update_engine::DlcInfo* DlcParameters::mutable_dlc_infos(int index) {
  // @@protoc_insertion_point(field_mutable:chromeos_update_engine.DlcParameters.dlc_infos)
  return dlc_infos_.Mutable(index);
}
inline ::chromeos_update_engine::DlcInfo* DlcParameters::add_dlc_infos() {
  // @@protoc_insertion_point(field_add:chromeos_update_engine.DlcParameters.dlc_infos)
  return dlc_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::chromeos_update_engine::DlcInfo >*
DlcParameters::mutable_dlc_infos() {
  // @@protoc_insertion_point(field_mutable_list:chromeos_update_engine.DlcParameters.dlc_infos)
  return &dlc_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::chromeos_update_engine::DlcInfo >&
DlcParameters::dlc_infos() const {
  // @@protoc_insertion_point(field_list:chromeos_update_engine.DlcParameters.dlc_infos)
  return dlc_infos_;
}

// optional string omaha_url = 2;
inline void DlcParameters::clear_omaha_url() {
  omaha_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DlcParameters::omaha_url() const {
  // @@protoc_insertion_point(field_get:chromeos_update_engine.DlcParameters.omaha_url)
  return omaha_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DlcParameters::set_omaha_url(const ::std::string& value) {
  
  omaha_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:chromeos_update_engine.DlcParameters.omaha_url)
}
inline void DlcParameters::set_omaha_url(const char* value) {
  
  omaha_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:chromeos_update_engine.DlcParameters.omaha_url)
}
inline void DlcParameters::set_omaha_url(const char* value, size_t size) {
  
  omaha_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:chromeos_update_engine.DlcParameters.omaha_url)
}
inline ::std::string* DlcParameters::mutable_omaha_url() {
  
  // @@protoc_insertion_point(field_mutable:chromeos_update_engine.DlcParameters.omaha_url)
  return omaha_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DlcParameters::release_omaha_url() {
  // @@protoc_insertion_point(field_release:chromeos_update_engine.DlcParameters.omaha_url)
  
  return omaha_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DlcParameters::set_allocated_omaha_url(::std::string* omaha_url) {
  if (omaha_url != NULL) {
    
  } else {
    
  }
  omaha_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), omaha_url);
  // @@protoc_insertion_point(field_set_allocated:chromeos_update_engine.DlcParameters.omaha_url)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace chromeos_update_engine

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_update_5fengine_2eproto__INCLUDED
